{"version":3,"sources":["serviceWorker.ts","components/menu/Menu.tsx","components/menu/MenuItem.tsx","components/menu/index.tsx","auth/login.tsx","auth/NotificationAsker.tsx","auth/index.tsx","components/Dashboard.tsx","App.tsx","firebase.config.ts","index.tsx","worker/notify.worker.ts"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","a","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","Menu","props","className","link","children","ListItem","button","component","forwardRef","props2","ref","exact","innerRef","to","useStyles","PropTypes","string","isRequired","elementType","makeStyles","createStyles","menuItem","background","color","menuItemIcon","AppMenuItem","name","Icon","classes","MenuItemRoot","ListItemIcon","ListItemText","primary","inset","appMenuItems","IconDashboard","IconArticle","IconInfo","IconCode","IconAndroid","MenuItems","toolbar","Divider","List","disablePadding","map","item","index","key","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","mixins","drawerPaper","position","whiteSpace","paddingTop","paddingBottom","height","content","flexGrow","padding","AppMenu","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","container","document","body","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","uiConfig","signInFlow","signInSuccessUrl","signInOptions","provider","firebase","auth","GoogleAuthProvider","PROVIDER_ID","customParameters","prompt","Login","style","textAlign","src","alt","fontSize","Button","DOMLink","firebaseAuth","NotificationAsker","Link","Notification","requestPermission","CurrentUser","currentUser","ShowIfNoNotify","permission","ShowIfNotify","ShowIfNoAuth","ShowIfAuth","AppRoutes","Dashboard","top","transform","overflow","App","clsx","Container","maxWidth","path","signOut","err","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","worker","Worker","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","user","initializeApp","FirebaseConfig","Error","uid","setTimeout","postMessage","type","FirebaseSetup","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e98cf9c5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n         /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n);\n\ntype Config = {\n   onSuccess?: (registration: ServiceWorkerRegistration) => void;\n   onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Let's check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl, config);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                     'worker. To learn more, visit https://bit.ly/CRA-PWA'\n               );\n            });\n         } else {\n            // Is not localhost. Just register service worker\n            registerValidSW(swUrl, config);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            if (installingWorker == null) {\n               return;\n            }\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the updated precached content has been fetched,\n                     // but the previous service worker will still serve the older\n                     // content until all client tabs are closed.\n                     console.log(\n                        'New content is available and will be used when all ' +\n                           'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                     );\n\n                     // Execute callback\n                     if (config && config.onUpdate) {\n                        config.onUpdate(registration);\n                     }\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n\n                     // Execute callback\n                     if (config && config.onSuccess) {\n                        config.onSuccess(registration);\n                     }\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n   })\n      .then(async response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         const contentType = response.headers.get('content-type');\n         if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n            await registration.unregister();\n            window.location.reload();\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n         .then(registration => {\n            registration.unregister();\n         })\n         .catch(error => {\n            console.error(error.message);\n         });\n   }\n}\n","import React, { forwardRef } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\nconst Menu: React.FC<{\n   className: string;\n   link: string;\n}> = props => {\n   const { className, link, children } = props;\n\n   // Return a LitItem with a link component\n   return (\n      <ListItem\n         button\n         className={className}\n         component={forwardRef((props2: NavLinkProps, ref: any) => (\n            <NavLink exact {...props2} innerRef={ref} />\n         ))}\n         to={link}\n      >\n         {children}\n      </ListItem>\n   );\n};\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Menu from './Menu';\n\n// React runtime PropTypes\nexport const AppMenuItemPropTypes = {\n   name: PropTypes.string.isRequired,\n   link: PropTypes.string.isRequired,\n   Icon: PropTypes.elementType\n};\n\n// TypeScript compile-time props type, infered from propTypes\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\ntype AppMenuItemPropTypes = PropTypes.InferProps<typeof AppMenuItemPropTypes>;\n\nconst AppMenuItem: React.FC<AppMenuItemPropTypes> = props => {\n   const { name, link, Icon } = props;\n   const classes = useStyles();\n\n   const MenuItemRoot = (\n      <Menu className={classes.menuItem} link={link}>\n         {/* Display an icon if any */}\n         {!!Icon && (\n            <ListItemIcon className={classes.menuItemIcon}>\n               <Icon />\n            </ListItemIcon>\n         )}\n         <ListItemText primary={name} inset={!Icon} />\n      </Menu>\n   );\n\n   return <>{MenuItemRoot}</>;\n};\n\nconst useStyles = makeStyles(() =>\n   createStyles({\n      menuItem: {\n         '&.active': {\n            background: 'rgba(0, 0, 0, 0.08)',\n            '& .MuiListItemIcon-root': {\n               color: '#fff'\n            }\n         }\n      },\n      menuItemIcon: {\n         color: '#97c05c'\n      }\n   })\n);\n\nexport default AppMenuItem;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\n\nimport IconDashboard from '@material-ui/icons/Dashboard';\nimport IconInfo from '@material-ui/icons/Description';\nimport IconArticle from '@material-ui/icons/DescriptionSharp';\nimport IconCode from '@material-ui/icons/GitHub';\nimport IconAndroid from '@material-ui/icons/AndroidRounded';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Divider from '@material-ui/core/Divider';\nimport {\n   CssBaseline,\n   AppBar,\n   Toolbar,\n   IconButton,\n   Typography,\n   Hidden,\n   Drawer\n} from '@material-ui/core';\n\nimport AppMenuItem from './MenuItem';\n\nconst appMenuItems = [\n   {\n      name: 'Dashboard',\n      link: '/',\n      Icon: IconDashboard\n   },\n   {\n      name: 'Divider',\n      // Just add metadata\n      link: '',\n      Icon: IconArticle\n   },\n   {\n      name: 'Sign Out',\n      link: '/signOut',\n      Icon: IconInfo\n   },\n   {\n      name: 'Divider',\n      // Just add metadata\n      link: '',\n      Icon: IconArticle\n   },\n   {\n      name: 'Website Code',\n      link: '/code-website',\n      Icon: IconCode\n   },\n   {\n      name: 'App Code',\n      link: '/code-app',\n      Icon: IconCode\n   },\n   {\n      name: 'Download APK',\n      link: '/release',\n      Icon: IconAndroid\n   }\n];\n\nexport function MenuItems({ classes }: { classes: { toolbar: string } }) {\n   return (\n      <>\n         {' '}\n         <div className={classes.toolbar} />\n         <Divider />\n         <List component=\"nav\" disablePadding>\n            {appMenuItems.map((item, index) =>\n               item.name !== 'Divider' ? (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <AppMenuItem {...item} key={`${index}333a`} />\n               ) : (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <Divider key={`${index}333a`} />\n               )\n            )}\n         </List>\n      </>\n   );\n}\n\nconst AppMenu: React.FC = () => {\n   const theme = useTheme();\n   const classes = useStyles();\n   const [mobileOpen, setMobileOpen] = React.useState(false);\n\n   const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n   };\n\n   const container = window != null ? () => window.document.body : null;\n   return (\n      <>\n         <CssBaseline />\n         <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n               <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={handleDrawerToggle}\n                  className={classes.menuButton}\n               >\n                  <MenuIcon />\n               </IconButton>\n               <Typography variant=\"h6\" noWrap>\n                  Low Battery Notifier\n               </Typography>\n            </Toolbar>\n         </AppBar>\n         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n               <Drawer\n                  container={container}\n                  variant=\"temporary\"\n                  anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                  open={mobileOpen}\n                  onClose={handleDrawerToggle}\n                  classes={{\n                     paper: classes.drawerPaper\n                  }}\n                  ModalProps={{\n                     keepMounted: true // Better open performance on mobile.\n                  }}\n               >\n                  <MenuItems classes={classes} />\n               </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n               <Drawer\n                  classes={{\n                     paper: classes.drawerPaper\n                  }}\n                  variant=\"permanent\"\n                  open\n               >\n                  <MenuItems classes={classes} />\n               </Drawer>\n            </Hidden>\n         </nav>\n      </>\n   );\n};\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      display: 'flex'\n   },\n   drawer: {\n      [theme.breakpoints.up('sm')]: {\n         width: drawerWidth,\n         flexShrink: 0\n      }\n   },\n   appBar: {\n      [theme.breakpoints.up('sm')]: {\n         width: `calc(100% - ${drawerWidth}px)`,\n         marginLeft: drawerWidth\n      }\n   },\n   menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n         display: 'none'\n      }\n   },\n   // necessary for content to be below app bar\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth,\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n      background: '#535454',\n      color: '#fff',\n      height: '100vh'\n   },\n   content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n   }\n}));\n\nexport default AppMenu;\n","import React from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Button } from '@material-ui/core';\nimport { Link as DOMLink } from 'react-router-dom';\n\nimport IconAndroid from '@material-ui/icons/Android';\n\n// Configure FirebaseUI.\nconst uiConfig = {\n   signInFlow: 'redirect',\n   // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n   signInSuccessUrl: `${process.env.PUBLIC_URL}/`,\n   // We will display Google and Facebook as auth providers.\n   signInOptions: [\n      {\n         provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n         customParameters: {\n            // Forces account selection even when one account\n            // is available.\n            prompt: 'select_account'\n         }\n      }\n   ]\n};\n\nexport default function Login() {\n   return (\n      <div\n         className=\"center\"\n         style={{ textAlign: 'center', paddingTop: '60px' }}\n      >\n         <img src={`${process.env.PUBLIC_URL}/logo192.png`} alt=\"Logo\" />\n         <br />\n         <h2>\n            <b>Download. Install. Get Low Battery Notifications</b>\n         </h2>\n         <div\n            className=\"center\"\n            style={{\n               textAlign: 'center',\n               padding: '30px',\n               color: '#808080',\n               fontSize: '20px'\n            }}\n         >\n            <div>\n               <div>Sends Notification whenever your Battery is Low</div>\n               <div>\n                  <Button variant=\"outlined\" component={DOMLink} to=\"/release\">\n                     <IconAndroid />\n                     Download Android APK\n                  </Button>\n               </div>\n            </div>\n         </div>\n         <div style={{ display: 'inline-block', height: '50%', width: '100%' }}>\n            <StyledFirebaseAuth\n               uiConfig={uiConfig}\n               firebaseAuth={firebase.auth()}\n            />\n         </div>\n      </div>\n   );\n}\n","import React from 'react';\nimport { Button, Link } from '@material-ui/core';\nimport { Link as DOMLink } from 'react-router-dom';\n\nimport IconAndroid from '@material-ui/icons/Android';\n\nexport default function NotificationAsker() {\n   return (\n      <div\n         className=\"center\"\n         style={{ textAlign: 'center', paddingTop: '60px' }}\n      >\n         <img src={`${process.env.PUBLIC_URL}/logo192.png`} alt=\"Logo\" />\n         <br />\n         <h2>\n            <b>Download. Install. Get Low Battery Notifications</b>\n         </h2>\n         <div\n            className=\"center\"\n            style={{\n               textAlign: 'center',\n               padding: '30px',\n               color: '#808080',\n               fontSize: '20px'\n            }}\n         >\n            <div>\n               Sends Notification whenever your Battery is Low\n               <br /> Remember to Install Our Android App\n               <br />\n               <br />\n            </div>\n            <div>\n               <div>\n                  <Link href=\"https://support.google.com/chrome/answer/3220216?co=GENIE.Platform%3DDesktop&hl=en\">\n                     Enable Notifications on Chrome\n                  </Link>\n               </div>\n               <div>\n                  <Link href=\"https://support.mozilla.org/en-US/kb/push-notifications-firefox\">\n                     Enable Notifications on Firefox\n                  </Link>\n               </div>\n            </div>\n            <div>\n               <br />\n               <Button variant=\"outlined\" component={DOMLink} to=\"/release\">\n                  <IconAndroid />\n                  Download Android APK\n               </Button>\n            </div>\n         </div>\n         <Button\n            variant=\"outlined\"\n            onClick={async () => {\n               await Notification.requestPermission();\n               window.location.href = `${process.env.PUBLIC_URL}/`;\n            }}\n         >\n            <p>Click to Request Notification Access</p>\n         </Button>\n      </div>\n   );\n}\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport Login from './login';\nimport NotificationAsker from './NotificationAsker';\n\nexport function CurrentUser() {\n   return firebase.auth().currentUser;\n}\n\nexport async function GetIDToken() {\n   return await CurrentUser()?.getIdToken();\n}\n\nexport function GetUserUniqueKey() {\n   return CurrentUser()?.uid;\n}\n\nexport function LogOut() {\n   return firebase.auth().signOut();\n}\n\nexport const AppRoutes: React.FC = props => {\n   return (\n      <>\n         <ShowIfNoNotify>\n            <NotificationAsker />\n         </ShowIfNoNotify>\n         <ShowIfNotify>\n            <ShowIfNoAuth>\n               <Login />\n            </ShowIfNoAuth>\n            <ShowIfAuth>{props.children}</ShowIfAuth>\n         </ShowIfNotify>\n      </>\n   );\n};\nexport const ShowIfNoNotify: React.FC = props => {\n   if (Notification.permission !== 'granted') return <>{props.children}</>;\n   return <></>;\n};\nexport const ShowIfNotify: React.FC = props => {\n   if (Notification.permission === 'granted') return <>{props.children}</>;\n   return <></>;\n};\n\nexport const ShowIfNoAuth: React.FC = props => {\n   if (CurrentUser() == null) return <>{props.children}</>;\n   return <></>;\n};\nexport const ShowIfAuth: React.FC = props => {\n   if (CurrentUser() != null) return <>{props.children}</>;\n   return <></>;\n};\n\nexport default AppRoutes;\n","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport IconAndroid from '@material-ui/icons/AndroidRounded';\n\nexport default function Dashboard() {\n   return (\n      <>\n         <Typography\n            variant=\"h5\"\n            style={{\n               position: 'absolute',\n               top: '50%',\n               textAlign: 'center',\n               transform: 'translateY(-50%)'\n            }}\n         >\n            Please Install the Android App.\n            <br />\n            When the Android App is Installed, and this window is open, you will\n            receive notifications\n            <br />\n            <br />\n            <Button variant=\"outlined\" component={Link} to=\"/release\">\n               <IconAndroid />\n               Download Android APK\n            </Button>\n         </Typography>\n      </>\n   );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Menu from './components/menu';\nimport Auth, { LogOut } from './auth';\n\nimport Dashboard from './components/Dashboard';\n\nconst App: React.FC = () => {\n   const classes = useStyles();\n\n   return (\n      <Router>\n         <Auth>\n            <div className={clsx('App', classes.root)}>\n               <Menu />\n               <main className={classes.content}>\n                  <Container maxWidth=\"lg\" className={classes.container}>\n                     <Switch>\n                        <Route path=\"/\" exact component={Dashboard} />\n                        <Route\n                           path=\"/signOut\"\n                           component={() => {\n                              LogOut()\n                                 .then(() => {\n                                    window.location.href = `${process.env.PUBLIC_URL}/`;\n                                    return null;\n                                 })\n                                 .catch(err => console.error(err));\n                              return null;\n                           }}\n                        />\n                     </Switch>\n                  </Container>\n               </main>\n            </div>\n         </Auth>\n         <Switch>\n            <Route\n               path=\"/article\"\n               component={() => {\n                  window.location.href =\n                     'https://medium.com/@pratikpc/six-degrees-of-formula-one-and-other-inter-connections-160a3a668afa?source=friends_link&sk=474f667c0b1ea7e18e8531c23b48eb8b';\n                  return null;\n               }}\n            />\n            <Route\n               path=\"/code-website\"\n               component={() => {\n                  window.location.href =\n                     'https://github.com/pratikpc/Battery-Low-Notifier';\n                  return null;\n               }}\n            />\n            <Route\n               path=\"/code-app\"\n               component={() => {\n                  window.location.href =\n                     'https://github.com/pratikpc/Battery-Low-Notifier-Android';\n                  return null;\n               }}\n            />\n            <Route\n               path=\"/release\"\n               component={() => {\n                  window.location.href =\n                     'https://github.com/pratikpc/Battery-Low-Notifier-Android/releases';\n                  return null;\n               }}\n            />\n         </Switch>\n      </Router>\n   );\n};\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      display: 'flex'\n   },\n   content: {\n      flexGrow: 1,\n      height: '90vh',\n      overflow: 'auto',\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n   },\n   container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n   }\n}));\n\nexport default App;\n","// This given key is public\n// https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public\n// In order to secure it, please refer to\n// https://stackoverflow.com/questions/35418143/how-to-restrict-firebase-data-modification\n\nexport const firebaseConfig = {\n   apiKey: 'AIzaSyC7UY52Ta47PlEEd4nGit8kpEsDJmllAD0',\n   authDomain: 'battery-power-9a1d9.firebaseapp.com',\n   databaseURL: 'https://battery-power-9a1d9.firebaseio.com',\n   projectId: 'battery-power-9a1d9',\n   storageBucket: 'battery-power-9a1d9.appspot.com',\n   messagingSenderId: '43180403362',\n   appId: '1:43180403362:web:a319c9a9a2766864fd05fb',\n   measurementId: 'G-NZM6ER5V5E'\n};\n\nexport default firebaseConfig;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\n\nimport FirebaseConfig from './firebase.config';\nimport { CurrentUser } from './auth';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport NotifyWorker from './worker/notify.worker';\n\nconst worker = new NotifyWorker();\n\nasync function FirebaseSetup() {\n   firebase.initializeApp(FirebaseConfig);\n   // worker.onmessage = (ev: any) => console.log(ev);\n   if (window.Notification == null) {\n      throw new Error('Notification Permit Not Granted');\n   }\n   // Wait till Firebase Load Complete before Firing\n   function getCurrentUser(auth: firebase.auth.Auth) {\n      return new Promise<firebase.User | null>((resolve, reject) => {\n         const unsubscribe = auth.onAuthStateChanged(user => {\n            unsubscribe();\n            resolve(user);\n         }, reject);\n      });\n   }\n   // If you want your app to work offline and load faster, you can change\n   // unregister() to register() below. Note this comes with some pitfalls.\n   // Learn more about service workers: https://bit.ly/CRA-PWA\n   serviceWorker.register();\n   await getCurrentUser(firebase.auth());\n   const user = CurrentUser();\n   if (user != null) {\n      const { uid } = user;\n      setTimeout(() => {\n         worker.postMessage({\n            type: 'start',\n            uid: uid\n         });\n      }, 500);\n   }\n}\n\nFirebaseSetup()\n   .then(() => {\n      ReactDOM.render(<App />, document.getElementById('root'));\n      return null;\n   })\n   .catch(err => console.error(err));\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/notify.worker.b973d492.worker.js\");\n}\n"],"sourceRoot":""}